{"ast":null,"code":"var _jsxFileName = \"/home/agox/cursos/CTD/frontend3/fe3-final/src/Routes/Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const [favs, setFavs] = useState([]);\n  useEffect(() => {\n    const favs = [];\n    const favsFromLocalStorage = localStorage.getItem(\"favs\");\n\n    if (favsFromLocalStorage) {\n      favs.push(...JSON.parse(favsFromLocalStorage));\n    }\n\n    setFavs(favs);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favs.map(fav => /*#__PURE__*/_jsxDEV(Card, { ...fav\n      }, fav.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Favs, \"/0BlQ36dvQ0SHmD11PH7pkr4tYs=\");\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","useState","Card","Favs","favs","setFavs","favsFromLocalStorage","localStorage","getItem","push","JSON","parse","map","fav","id"],"sources":["/home/agox/cursos/CTD/frontend3/fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n  const [favs, setFavs] = useState([]);\n  useEffect(() => {\n    const favs = [];\n    const favsFromLocalStorage = localStorage.getItem(\"favs\");\n    if (favsFromLocalStorage) {\n      favs.push(...JSON.parse(favsFromLocalStorage));\n    }\n    setFavs(favs);\n  }, []);\n\n  return (\n    <>\n      <h1>Dentists Favs</h1>\n      <div className=\"card-grid\">\n        {/* este componente debe consumir los destacados del localStorage */}\n        {/* Deberan renderizar una Card por cada uno de ellos */}\n        {favs.map((fav) => (\n          <Card key={fav.id} {...fav} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Favs;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMI,IAAI,GAAG,EAAb;IACA,MAAME,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA7B;;IACA,IAAIF,oBAAJ,EAA0B;MACxBF,IAAI,CAACK,IAAL,CAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,oBAAX,CAAb;IACD;;IACDD,OAAO,CAACD,IAAD,CAAP;EACD,CAPQ,EAON,EAPM,CAAT;EASA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UAGGA,IAAI,CAACQ,GAAL,CAAUC,GAAD,iBACR,QAAC,IAAD,OAAuBA;MAAvB,GAAWA,GAAG,CAACC,EAAf;QAAA;QAAA;QAAA;MAAA,QADD;IAHH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAYD,CAvBD;;GAAMX,I;;KAAAA,I;AAyBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}